#!/usr/bin/env ruby
require 'gli'
require 'etc'
begin # XXX: Remove this begin/rescue before distributing your app
require 'timesheet'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/timesheet` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/timesheet now"
  exit 64
end

include GLI::App

program_desc 'Simple app for tracking working time'

version Timesheet::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value "#{Etc.getlogin()}"
arg_name 'USER'
flag [:u,:user]

desc 'Clock in when you start working'
arg_name 'Describe arguments to in here'
command :in do |c|
  c.desc 'Describe a switch to in'
  c.switch :s

  c.desc 'Time in'
  c.default_value "#{Time.now}"
  c.flag [:t, :time]
  c.action do |global_options,options,args|
    timesheet_path = "/home/#{global_options[:u]}/.timesheet"
    Dir.mkdir(timesheet_path) unless File.directory?(timesheet_path)

    timesheet_file = timesheet_path + "/timesheet"
    File.open(timesheet_file, "a+") do |file|
      file.puts "#{global_options[:user]} in  => #{options[:time]}"
    end

    puts "in command ran"
  end
end

desc 'Describe out here'
arg_name 'Describe arguments to out here'
command :out do |c|
  c.action do |global_options,options,args|
    puts "out command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
