#!/usr/bin/env ruby
require 'gli'
require 'etc'
begin # XXX: Remove this begin/rescue before distributing your app
require 'timesheet'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/timesheet` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/timesheet now"
  exit 64
end

include GLI::App

program_desc 'Simple app for tracking working time'

version Timesheet::VERSION

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Username of active user'
default_value "#{Etc.getlogin()}"
arg_name 'USER'
flag [:u,:user]

desc 'Path of timesheet directory'
default_value ENV["HOME"] + "/.timesheet"
arg_name 'PATH'
flag [:path]

pre do |global,command,options,args|
  @user = global[:user]
  @file = "#{@path = global[:path]}/timesheet"
  FileUtils.mkdir(@path) unless File.directory?(@path)
  unless File.exists?(@file)
    File.new(@file,"a+")
    @file.puts "TIMESHEET FOR #{@user.upcase}"
  end
  true
end

desc 'Clock in when you start working'
arg_name 'Describe arguments to in here'
command :in do |c|
  c.desc 'Describe a switch to in'
  c.switch :s

  c.desc 'Time in'
  c.default_value "#{Time.now}"
  c.flag [:t, :time]
  c.action do |global_options,options,args|
    File.open(@file, "a+") do |file|
      file.puts "#{@user} in  => #{options[:time]}"
    end

    puts "in command ran"
  end
end

desc 'Clock out when you finish working'
arg_name 'Describe arguments to out here'
command :out do |c|
  c.desc 'Time out'
  c.default_value "#{Time.now}"
  c.flag [:t, :time]
  c.action do |global_options,options,args|
    File.open(@file, "a+") do |file|
      file.puts "#{@user} out => #{options[:time]}"
    end

    puts "out command ran"
  end
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
